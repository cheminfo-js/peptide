{"version":3,"sources":["webpack:///peptide/webpack/universalModuleDefinition","webpack:///peptide/peptide.min.js","webpack:///peptide/webpack/bootstrap 0adcc9d128c8254de06c","webpack:///peptide/./src/index.js","webpack:///peptide/./src/aminoAcids.js","webpack:///peptide/./src/isoElectricPoint.js","webpack:///peptide/./src/chargePeptide.js","webpack:///peptide/./src/getAA.js","webpack:///peptide/./src/allowNeutralLoss.js","webpack:///peptide/./src/splitPeptide.js","webpack:///peptide/./src/digestPeptide.js","webpack:///peptide/./src/generatePeptideFragments.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","aa1To3","code","i","aa","length","aa1","aa3","Error","converAA1To3","mf","newmf","charAt","IEP","chargePeptide","allowNeutralLoss","splitPeptide","digestPeptide","generatePeptideFragments","getInfo","calculateIEP","sequence","aas","result","calculateIEPChart","calculateChart","getColorForIEP","iep","getColor","calculateCharge","ph","convertAASequence","search","tmpmf","replace","parts","split","substr","toLowerCase","name","sc","type","pKaC","pKaN","pKa","pH","combined","combine","charge","calculateForPh","Math","round","currentCharge","first","last","current","previous","abs","y","yAbs","push","total","pow","key","acid","aaObject","basic","white","options","undefined","Array","isArray","chargeOnePeptide","match","firstAA","getAA","allowOneNeutralLoss","splitSequence","begin","end","slice","digestSequence","enzyme","minMissed","maxMissed","minResidue","maxResidue","Number","MAX_VALUE","regexp","getRegexp","fragments","from","nbResidue","to","results","j","min","fragment","k","addNTerm","mfs","nTerm","a","b","addITerm","iTerm","ya","yb","yc","zc","addCTerm","cTerm","x","z","maxInternal","minInternal","mfparts","concat"],"mappings":"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","file":"peptide.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Peptide\"] = factory();\n\telse\n\t\troot[\"Peptide\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Peptide\"] = factory();\n\telse\n\t\troot[\"Peptide\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar aa = __webpack_require__(1);\n\tvar IEP = __webpack_require__(2);\n\tvar chargePeptide = __webpack_require__(3);\n\tvar allowNeutralLoss = __webpack_require__(5);\n\tvar splitPeptide = __webpack_require__(6);\n\tvar digestPeptide = __webpack_require__(7);\n\tvar generatePeptideFragments = __webpack_require__(8);\n\t\n\texports.getInfo = function () {\n\t    return aa;\n\t}\n\t\n\t// sequence should be in the \"right\" format like HAlaGlyProOH\n\t\n\texports.splitPeptide=splitPeptide;\n\texports.digestPeptide=digestPeptide;\n\t\n\texports.calculateIEP = function (sequence) {\n\t    var aas=splitPeptide(sequence);\n\t    var result=IEP.calculateIEP(aas);\n\t    return result;\n\t}\n\t\n\texports.calculateIEPChart = function (sequence) {\n\t    var aas=splitPeptide(sequence);\n\t    var result=IEP.calculateChart(aas);\n\t    return result;\n\t}\n\t\n\t\n\texports.getColorForIEP = function (iep) {\n\t    return IEP.getColor(iep);\n\t}\n\t\n\texports.calculateCharge = function (sequence, ph) {\n\t    var aas=splitPeptide(sequence);\n\t    return IEP.calculateCharge(aas, ph);\n\t}\n\t\n\texports.generatePeptideFragments = generatePeptideFragments;\n\t\n\texports.chargePeptide = chargePeptide;\n\texports.allowNeutralLoss = allowNeutralLoss;\n\t\n\tfunction aa1To3(code) {\n\t    for (var i = 0; i < aa.length; i++) {\n\t        if (aa[i].aa1 === code) {\n\t            return aa[i].aa3;\n\t        }\n\t    }\n\t    throw new Error('Invalid 1 letter code: ' + code);\n\t}\n\t\n\tfunction converAA1To3(mf) {\n\t    var newmf = '';\n\t    for (var i = 0; i < mf.length; i++) {\n\t        newmf += aa1To3(mf.charAt(i));\n\t    }\n\t    return newmf;\n\t}\n\t\n\tfunction capitalizeAA3(mf) {\n\t    for (var i = 0; i < aa.length; i++) {\n\t        var regexp = new RegExp(aa[i].aa3, 'gi');\n\t        mf = mf.replace(regexp, aa[i].aa3);\n\t    }\n\t    return mf;\n\t}\n\t\n\t\n\texports.convertAASequence = function convertAASequence(mf) {\n\t    // this function will check if it is a sequence of aa in 1 letter or 3 letters and convert them if it is the case\n\t    // it could be a multiline mf !\n\t    // if it is a multiline we could make some \"tricks\" ...\n\t    var newmf = mf;\n\t    // SEQRES   1 B  256  MET PRO VAL GLU ILE THR VAL LYS GLU LEU LEU GLU ALA\n\t    // SEQRES   2 B  256  GLY VAL HIS PHE GLY HIS GLU ARG LYS ARG TRP ASN PRO\n\t    // or\n\t    // MET PRO VAL GLU ILE THR VAL LYS GLU LEU LEU GLU ALA\n\t    // GLY VAL HIS PHE GLY HIS GLU ARG LYS ARG TRP ASN PRO\n\t    if (mf.search(/[A-Z]{3} [A-Z]{3} [A-Z]{3}/) > -1) {\n\t        // this is a PDB !\n\t        var tmpmf = mf.replace(/[\\r\\n]+/g, ' ');\n\t        tmpmf = tmpmf.replace(/(SEQRES|[0-9]+| [A-Z] | [0-9A-Z]{4-50})/g, '');\n\t        // we need to correct the uppercase / lowercase\n\t        var parts = tmpmf.split(' ');\n\t        newmf = 'H';\n\t        for (var i = 0; i < parts.length; i++) {\n\t            newmf += parts[i].substr(0, 1) + parts[i].substr(1).toLowerCase();\n\t        }\n\t        newmf += 'OH';\n\t    } else if ((mf.search(/[A-Z]{3}/) > -1) && (mf.search(/[a-zA-Z][a-z0-9]/) == -1)) {\n\t        // UNIPROT\n\t        //   370        380        390        400        410        420\n\t        //GFKPNLRKTF VSGLFRESCG AHFYRGVDVK PFYIKKPVDN LFALMLILNR LRGWGVVGGM\n\t        //\n\t        //    430        440        450        460        470        480\n\t        //SDPRLYKVWV RLSSQVPSMF FGGTDLAADY YVVSPPTAVS VYTKTPYGRL LADTRTSGFR\n\t        // We remove all the number, all the spaces, etc\n\t        newmf = 'H' + converAA1To3(newmf.replace(/[^A-Z]/g, '')) + 'OH';\n\t    }\n\t\n\t    return newmf;\n\t\n\t};\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t// SOURCE: https://en.wikipedia.org/wiki/Amino_acid\n\tmodule.exports = [\n\t    // Standard amino acids\n\t    {\n\t        name: \"Alanine\",\n\t        aa3: \"Ala\",\n\t        aa1: \"A\",\n\t        sc: {\n\t            type: \"hydrophobic\"\n\t        },\n\t        pKaC: 2.33,\n\t        pKaN: 9.71\n\t    },\n\t    {\n\t        name: \"Arginine\",\n\t        aa3: \"Arg\",\n\t        aa1: \"R\",\n\t        sc: {\n\t            type: \"positive\",\n\t            pKa: 12.10\n\t        },\n\t        pKaC: 2.03,\n\t        pKaN: 9.00\n\t    },\n\t    {\n\t        name: \"Asparagine\",\n\t        aa3: \"Asn\",\n\t        aa1: \"N\",\n\t        sc: {\n\t            type: \"polar\"\n\t        },\n\t        pKaC: 2.13,\n\t        pKaN: 9.05\n\t    },\n\t    {\n\t        name: \"Aspartic acid\",\n\t        aa3: \"Asp\",\n\t        aa1: \"D\",\n\t        sc: {\n\t            type: \"negative\",\n\t            pKa: 3.71\n\t        },\n\t        pKaC: 1.95,\n\t        pKaN: 9.66\n\t    },\n\t    {\n\t        name: \"Cysteine\",\n\t        aa3: \"Cys\",\n\t        aa1: \"C\",\n\t        sc: {\n\t            type: \"special\",\n\t            pKa: 8.14\n\t        },\n\t        pKaC: 1.91,\n\t        pKaN: 10.28\n\t    },\n\t    {\n\t        name: \"Glutamic acid\",\n\t        aa3: \"Glu\",\n\t        aa1: \"E\",\n\t        sc: {\n\t            type: \"negative\",\n\t            pKa: 4.15\n\t        },\n\t        pKaC: 2.16,\n\t        pKaN: 9.58\n\t    },\n\t    {\n\t        name: \"Glutamine\",\n\t        aa3: \"Gln\",\n\t        aa1: \"Q\",\n\t        sc: {\n\t            type: \"polar\"\n\t        },\n\t        pKaC: 2.18,\n\t        pKaN: 9.00\n\t    },\n\t    {\n\t        name: \"Glycine\",\n\t        aa3: \"Gly\",\n\t        aa1: \"G\",\n\t        sc: {\n\t            type: \"special\"\n\t        },\n\t        pKaC: 2.34,\n\t        pKaN: 9.58\n\t    },\n\t    {\n\t        name: \"Histidine\",\n\t        aa3: \"His\",\n\t        aa1: \"H\",\n\t        sc: {\n\t            type: \"positive\",\n\t            pKa: 6.04\n\t        },\n\t        pKaC: 1.70,\n\t        pKaN: 9.09\n\t    },\n\t    {\n\t        name: \"Isoleucine\",\n\t        aa3: \"Ile\",\n\t        aa1: \"I\",\n\t        sc: {\n\t            type: \"hydrophobic\"\n\t        },\n\t        pKaC: 2.26,\n\t        pKaN: 9.60\n\t    },\n\t    {\n\t        name: \"Leucine\",\n\t        aa3: \"Leu\",\n\t        aa1: \"L\",\n\t        sc: {\n\t            type: \"hydrophobic\"\n\t        },\n\t        pKaC: 2.32,\n\t        pKaN: 9.58\n\t    },\n\t    {\n\t        name: \"Lysine\",\n\t        aa3: \"Lys\",\n\t        aa1: \"K\",\n\t        sc: {\n\t            type: \"positive\",\n\t            pKa: 10.67\n\t        },\n\t        pKaC: 2.15,\n\t        pKaN: 9.16\n\t    },\n\t    {\n\t        name: \"Methionine\",\n\t        aa3: \"Met\",\n\t        aa1: \"M\",\n\t        sc: {\n\t            type: \"hydrophobic\"\n\t        },\n\t        pKaC: 2.16,\n\t        pKaN: 9.08\n\t    },\n\t    {\n\t        name: \"Phenylalanine\",\n\t        aa3: \"Phe\",\n\t        aa1: \"F\",\n\t        sc: {\n\t            type: \"hydrophobic\"\n\t        },\n\t        pKaC: 2.18,\n\t        pKaN: 9.09\n\t    },\n\t    {\n\t        name: \"Proline\",\n\t        aa3: \"Pro\",\n\t        aa1: \"P\",\n\t        sc: {\n\t            type: \"special\"\n\t        },\n\t        pKaC: 1.95,\n\t        pKaN: 10.47\n\t    },\n\t    {\n\t        name: \"Serine\",\n\t        aa3: \"Ser\",\n\t        aa1: \"S\",\n\t        sc: {\n\t            type: \"polar\"\n\t        },\n\t        pKaC: 2.13,\n\t        pKaN: 9.05\n\t    },\n\t    {\n\t        name: \"Threonine\",\n\t        aa3: \"Thr\",\n\t        aa1: \"T\",\n\t        sc: {\n\t            type: \"polar\"\n\t        },\n\t        pKaC: 2.20,\n\t        pKaN: 8.96\n\t    },\n\t    {\n\t        name: \"Tryptophan\",\n\t        aa3: \"Trp\",\n\t        aa1: \"W\",\n\t        sc: {\n\t            type: \"hydrophobic\"\n\t        },\n\t        pKaC: 2.38,\n\t        pKaN: 9.34\n\t    },\n\t    {\n\t        name: \"Tyrosine\",\n\t        aa3: \"Tyr\",\n\t        aa1: \"Y\",\n\t        sc: {\n\t            type: \"hydrophobic\"\n\t        },\n\t        pKaC: 2.24,\n\t        pKaN: 9.04\n\t    },\n\t    {\n\t        name: \"Valine\",\n\t        aa3: \"Val\",\n\t        aa1: \"V\",\n\t        sc: {\n\t            type: \"hydrophobic\"\n\t        },\n\t        pKaC: 2.27,\n\t        pKaN: 9.52\n\t    },\n\t    // Additional\n\t    {\n\t        name: \"Selenocysteine\",\n\t        aa3: \"Sec\",\n\t        aa1: \"U\"\n\t    },\n\t    {\n\t        name: \"Pyrrolysine\",\n\t        aa3: \"Pyl\",\n\t        aa1: \"O\"\n\t    },\n\t    // Ambiguous\n\t    {\n\t        name: \"Asparagine or aspartic acid\",\n\t        aa3: \"Asx\",\n\t        aa1: \"B\"\n\t    },\n\t    {\n\t        name: \"Glutamine or glutamic acid\",\n\t        aa3: \"Glx\",\n\t        aa1: \"Z\"\n\t    },\n\t    {\n\t        name: \"Leucine or isoleucine\",\n\t        aa3: \"Xle\",\n\t        aa1: \"J\"\n\t    },\n\t    {\n\t        name: \"Unspecified or unknown\",\n\t        aa3: \"Xaa\",\n\t        aa1: \"X\"\n\t    }\n\t];\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\n\tvar aa = __webpack_require__(1);\n\t\n\t// we will convert the data to an object to be much faster\n\tvar aaObject={};\n\tfor (var i=0; i<aa.length; i++) {\n\t    aaObject[aa[i].aa3]=aa[i];\n\t}\n\t\n\t\n\t\n\tfunction calculateCharge(aas, pH) {\n\t    if (! pH) pH=7.0;\n\t    var combined=combine(aas);\n\t    if (!combined) return;\n\t    var charge=calculateForPh(combined, pH);\n\t    return Math.round(charge*1000)/1000;\n\t}\n\t\n\t// this methods required an array of aas\n\t\n\tfunction calculateIEP(aas) {\n\t    var combined=combine(aas);\n\t    if (!combined) return;\n\t    var first=0;\n\t    var last=14;\n\t    var current=14;\n\t    var previous=0;\n\t    var currentCharge;\n\t    while (Math.abs(current-previous)>0.0001) {\n\t        previous=current;\n\t        current=(last + first) / 2;\n\t        currentCharge=calculateForPh(combined, current);\n\t        if (currentCharge>0) {\n\t            first=current;\n\t        } else if (currentCharge<0) {\n\t            last=current;\n\t        } else {\n\t            previous=current;\n\t        }\n\t    }\n\t    return Math.round(current*1000)/1000;\n\t}\n\t\n\tfunction calculateChart(aas) {\n\t    var combined=combine(aas);\n\t    if (!combined) return;\n\t    var y=[];\n\t    var yAbs=[];\n\t    for (var i=0; i<=14; i=i+0.01) {\n\t        var charge=calculateForPh(combined, i);\n\t        y.push(charge);\n\t        yAbs.push(Math.abs(charge));\n\t    }\n\t    combined.y=y;\n\t    combined.yAbs=yAbs;\n\t\n\t    return combined;\n\t}\n\t\n\t\n\tfunction calculateForPh(combined, pH) {\n\t    var total=0;\n\t    total+=1/(1+Math.pow(10,pH-combined.first));\n\t    total+=-1/(1+Math.pow(10,combined.last-pH));\n\t    for (var key in combined.acid) {\n\t        total+=-combined.acid[key]/(1+Math.pow(10,aaObject[key].sc.pKa-pH));\n\t    }\n\t    for (var key in combined.basic) {\n\t        total+=combined.basic[key]/(1+Math.pow(10,pH-aaObject[key].sc.pKa));\n\t    }\n\t    return total;\n\t}\n\t\n\t// we will combine the amino acids\n\tfunction combine(aas) {\n\t    var combined={};\n\t    if (aaObject[aas[0]]) {\n\t        combined.first=aaObject[aas[0]].pKaN;\n\t    } else {\n\t        return;\n\t    }\n\t    if (aaObject[aas[aas.length-1]]) {\n\t        combined.last=aaObject[aas[aas.length-1]].pKaC;\n\t    } else {\n\t        return;\n\t    }\n\t    combined.basic={};\n\t    combined.acid={};\n\t    for (var i=0; i<aas.length; i++) {\n\t        var aa=aas[i];\n\t        if (! aaObject[aa]) return;\n\t        if (aaObject[aa].sc && aaObject[aa].sc.type) {\n\t            if (aaObject[aa].sc.type==\"positive\") {\n\t                if (!combined.basic[aa]) {\n\t                    combined.basic[aa] = 0;\n\t                }\n\t                combined.basic[aa]++;\n\t            } else if (aaObject[aa].sc.type==\"negative\") {\n\t                if (!combined.acid[aa]) {\n\t                    combined.acid[aa] = 0;\n\t                }\n\t                combined.acid[aa]++;\n\t            }\n\t        }\n\t    }\n\t    return combined;\n\t}\n\t\n\t/*\n\t We can generate a color based on iep\n\t 0 -> 7 means that at pH 7 it is charged negatively (blue)\n\t 7 -> 14 means that at pH7 it is charged positively (red)\n\t */\n\tfunction getColor(iep) {\n\t    if (iep<7) {\n\t        if (iep<3) iep=3;\n\t        var white=Math.round(255-(7-iep)*(200/4));\n\t        return \"rgb(\"+white+\",\"+white+\",255)\";\n\t    } else if (iep>7) {\n\t        if (iep>11) iep=11;\n\t        var white=Math.round(255-(iep-7)*(200/4));\n\t        return \"rgb(255,\"+white+\",\"+white+\")\";\n\t    }\n\t    return \"rgb(255,255,255)\";\n\t}\n\t\n\tmodule.exports={\n\t    calculateIEP: calculateIEP,\n\t    calculateCharge: calculateCharge,\n\t    calculateChart: calculateChart,\n\t    getColor: getColor\n\t}\n\t\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar getAA = __webpack_require__(4);\n\t\n\t// SOURCE: https://en.wikipedia.org/wiki/Amino_acid\n\t\n\tfunction chargePeptide(mf, options) {\n\t    var options=options || {};\n\t    if (options.pH === undefined) options.pH=0;\n\t    if (Array.isArray(mf)) {\n\t        for (var i=0; i<mf.length; i++) {\n\t            mf[i]=chargeOnePeptide(mf[i], options);\n\t        }\n\t        return mf;\n\t    } else {\n\t        return chargeOnePeptide(mf, options);\n\t    }\n\t}\n\t\n\tfunction chargeOnePeptide(mf, options) {\n\t    var pH=options.pH;\n\t    // we will allow to charge the peptide at a specific pH\n\t\n\t    // first amino acids (N-terminal)\n\t    if (mf.match(/^H[A-Z][a-z]{2}/)) {\n\t        var firstAA=mf.replace(/^H([A-Z][a-z]{2}).*/,\"$1\");\n\t        if (getAA(firstAA) && pH<getAA(firstAA).pKaN) {\n\t            mf=mf.replace(/^H([^+])/, 'H+H$1');\n\t        }\n\t    }\n\t\n\t    // last amino acids (C-terminal)\n\t    if (mf.match(/[A-Z][a-z]{2}OH$/)) {\n\t        var lastAA=mf.replace(/.*([A-Z][a-z]{2})OH$/,\"$1\");\n\t        if (getAA(firstAA) && pH>getAA(firstAA).pKaC) {\n\t            mf=mf.replace(/OH$/, 'O-');\n\t        }\n\t    }\n\t\n\t    // basic AA\n\t    if (pH < getAA('Arg').sc.pKa) mf=mf.replace(/(Arg)(?!\\()/g, '$1(H+)');\n\t    if (pH < getAA('His').sc.pKa) mf=mf.replace(/(His)(?!\\()/g, '$1(H+)');\n\t    if (pH < getAA('Lys').sc.pKa) mf=mf.replace(/(Lys)(?!\\()/g, '$1(H+)');\n\t\n\t    // acid AA\n\t    if (pH > getAA('Asp').sc.pKa) mf=mf.replace(/(Asp)(?!\\()/g, '$1(H-1-)');\n\t    if (pH > getAA('Glu').sc.pKa) mf=mf.replace(/(Glu)(?!\\()/g, '$1(H-1-)');\n\t\n\t    if (pH > getAA('Cys').sc.pKa) mf=mf.replace(/(Cys)(?!\\()/g, '$1(H-1-)');\n\t\n\t    return mf;\n\t};\n\t\n\tmodule.exports = chargePeptide;\n\t\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar aa = __webpack_require__(1);\n\t\n\tfunction getAA(code) {\n\t    if (code.length===1) {\n\t        for (var i = 0; i < aa.length; i++) {\n\t            if (aa[i].aa1 === code) {\n\t                return aa[i];\n\t            }\n\t        }\n\t    }\n\t    if (code.length===3) {\n\t        for (var i = 0; i < aa.length; i++) {\n\t            if (aa[i].aa3 === code) {\n\t                return aa[i];\n\t            }\n\t        }\n\t    }\n\t}\n\t\n\tmodule.exports = getAA;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\n\tfunction allowNeutralLoss(mf, options) {\n\t    if (Array.isArray(mf)) {\n\t        for (var i=0; i<mf.length; i++) {\n\t            mf[i]=allowOneNeutralLoss(mf[i], options);\n\t        }\n\t        return mf;\n\t    } else {\n\t        return allowOneNeutralLoss(mf, options);\n\t    }\n\t}\n\t\n\tfunction allowOneNeutralLoss(mf, options) {\n\t    mf=mf.replace(/(Ser|Thr|Asp|Glu)(?!\\()/g, '$1(H-2O-1)0-1');\n\t    mf=mf.replace(/(Arg|Lys|Asn|Gln)(?!\\()/g, '$1(N-1H-3)0-1');\n\t\n\t    return mf;\n\t};\n\t\n\tmodule.exports = allowNeutralLoss;\n\t\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tfunction splitSequence(sequence) {\n\t    var aas=sequence.replace(/([A-Z])/g,\" $1\").split(/ /);\n\t    var begin=0;\n\t    while (aas[begin]==='' || aas[begin]==='H') {\n\t        begin++;\n\t    }\n\t    var end=aas.length-1;\n\t    while (aas[end]==='O' || aas[end]==='H') {\n\t        end--;\n\t    }\n\t    aas=aas.slice(begin,end+1);\n\t    return aas;\n\t}\n\t\n\t\n\tmodule.exports = splitSequence;\n\t\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar splitSequence=__webpack_require__(6);\n\t\n\t\n\t/*\n\tIotuibs:\n\t* minMissed (default: 0)\n\t* maxMissed (default: 0)\n\t* minResidue: 0;\n\t* maxResidue: infinity\n\t* enzyme: chymotrypsin, trypsin, glucph4, glucph8, thermolysin, cyanogenbromide : Mandatory, no default value !\n\t */\n\t\n\tfunction digestSequence(sequence, options) {\n\t    var options=options || {};\n\t\n\t    sequence=sequence.replace(/^H([^a-z])/,'$1').replace(/OH$/,'');\n\t\n\t    options.enzyme = options.enzyme || 'trypsin';\n\t    if (options.minMissed===undefined) options.minMissed=0;\n\t    if (options.maxMissed===undefined) options.maxMissed=0;\n\t    if (options.minResidue===undefined) options.minResidue=0;\n\t    if (options.maxResidue===undefined) options.maxResidue=Number.MAX_VALUE;\n\t    var regexp=getRegexp(options.enzyme);\n\t    var fragments=sequence.replace(regexp,\"$1 \").split(/ /);\n\t    if (!fragments[fragments.length-1]) fragments=fragments.slice(0, fragments.length-1);\n\t\n\t    var from=0;\n\t    for (var i=0; i<fragments.length; i++) {\n\t        var nbResidue=splitSequence(fragments[i]).length;\n\t        fragments[i]={\n\t            sequence:fragments[i],\n\t            nbResidue:nbResidue,\n\t            from:from+1,\n\t            to:from+nbResidue\n\t        }\n\t        from+=nbResidue;\n\t    }\n\t\n\t\n\t    var results=[];\n\t\n\t    for (var i=0; i<fragments.length-options.minMissed; i++) {\n\t        for (var j=options.minMissed; j<=Math.min(options.maxMissed,fragments.length-i-1); j++) {\n\t            var fragment='';\n\t            var nbResidue=0;\n\t            for (var k=i; k<=(i+j); k++) {\n\t                fragment+=fragments[k].sequence;\n\t                nbResidue+=fragments[k].nbResidue;\n\t            }\n\t            var from=fragments[i].from;\n\t            var to=fragments[i+j].to;\n\t            if (fragment && nbResidue>=options.minResidue && nbResidue<=options.maxResidue) {\n\t                results.push(\"H\"+fragment+\"OH\"+\"$D\"+from+\">\"+to);\n\t            }\n\t        }\n\t    }\n\t\n\t    return results;\n\t}\n\t\n\t\n\tfunction getRegexp(enzyme) {\n\t    switch (enzyme.toLowerCase().replace(/[^a-z0-9]/g,'')) {\n\t        case 'chymotrypsin':\n\t            return /(Phe|Tyr|Trp)(?!Pro)/g;\n\t        case 'trypsin':\n\t            return /(Lys|Arg)(?!Pro)/g;\n\t        case 'lysc':\n\t            return /(Lys)(?!Pro)/g;\n\t        case 'glucph4':\n\t            return /(Glu)(?!Pro|Glu)/g;\n\t        case 'glucph8':\n\t            return /(Asp|Glu)(?!Pro|Glu)/g;\n\t        case 'thermolysin':\n\t            return /(Leu|Ile|Met|Phe|Trp)/g;\n\t        case 'cyanogenbromide':\n\t            return /(Met)/g;\n\t    }\n\t    throw new Error('Digestion enzyme: '+enzyme+' is unknown');\n\t}\n\t\n\tmodule.exports = digestSequence;\n\t\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(mf, options) {\n\t    if (options === undefined) {\n\t        options = {\n\t            a: false,\n\t            b: true,\n\t            c: false,\n\t            x: false,\n\t            y: true,\n\t            z: false,\n\t            i: false,\n\t            ya: false,\n\t            yb: false,\n\t            yc: false,\n\t            zc: false\n\t        };\n\t    }\n\t    options.maxInternal = options.maxInternal || Number.MAX_VALUE;\n\t    options.minInternal = options.minInternal || 0;\n\t\n\t    var mfs = [];\n\t    // need to allow 0-9 to deal with neutral loss\n\t    var mfparts=mf.replace(/([a-z\\)0-9])([A-Z][a-z](?=[a-z]))/g,\"$1 $2\").split(/ /);\n\t\n\t    var nTerm=\"\";\n\t    var cTerm=\"\";\n\t\n\t    for (var i=1; i<mfparts.length; i++) {\n\t        nTerm+=mfparts[i-1];\n\t        cTerm=mfparts[mfparts.length-i]+cTerm;\n\t        addNTerm(mfs, nTerm, i, options);\n\t        addCTerm(mfs, cTerm, i, options);\n\t        if (options.i) mfs.push(mfparts[i]+\"HC-1O-1(+1)$i:\"+mfparts[i]);\n\t\n\t        if (options.ya || options.yb || options.yc || options.zc) { // we have double fragmentations\n\t            for (var j=i+1; j<Math.min(mfparts.length,options.maxInternal+i+1);j++) {\n\t                var iTerm='';\n\t                if ((j-i)>=options.minInternal) {\n\t                    for (var k = i; k < j; k++) {\n\t                        iTerm += mfparts[k];\n\t                    }\n\t                    addITerm(mfs, iTerm, mfparts.length - i, j, options);\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    if (mfs.length === 0) {\n\t        mfs = mfs.concat([mf]);\n\t    }\n\t\n\t    return mfs;\n\t\n\t};\n\t\n\tfunction addNTerm(mfs, nTerm, i, options) {\n\t    if (options.a) mfs.push(nTerm+\"C-1O-1(+1)$a\"+i);\n\t    if (options.b) mfs.push(nTerm+\"(+1)$b\"+i);\n\t    if (options.c) mfs.push(nTerm+\"NH3(+1)$c\"+i);\n\t}\n\t\n\tfunction addITerm(mfs, iTerm, i, j, options) {\n\t    if (options.ya) mfs.push(\"H\"+iTerm+\"C-1O-1(+1)$a\"+j+\"y\"+i);\n\t    if (options.yb) mfs.push(\"H\"+iTerm+\"(+1)$b\"+j+\"y\"+i);\n\t    if (options.yc) mfs.push(\"H\"+iTerm+\"NH3(+1)$c\"+j+\"y\"+i);\n\t    if (options.zc) mfs.push(\"N-1\"+iTerm+\"NH3(+1)$c\"+j+\"z\"+i);\n\t}\n\t\n\tfunction addCTerm(mfs, cTerm, i, options) {\n\t    if (options.x) mfs.push(\"CO(+1)\"+cTerm+\"$x\"+i);\n\t    if (options.y) mfs.push(\"H2(+1)\"+cTerm+\"$y\"+i);\n\t    if (options.z) mfs.push(\"N-1H-1(+1)\"+cTerm+\"$z\"+i);\n\t}\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** peptide.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 0adcc9d128c8254de06c\n **/","'use strict';\n\nvar aa = require('./aminoAcids');\nvar IEP = require('./isoElectricPoint');\nvar chargePeptide = require('./chargePeptide');\nvar allowNeutralLoss = require('./allowNeutralLoss');\nvar splitPeptide = require('./splitPeptide');\nvar digestPeptide = require('./digestPeptide');\nvar generatePeptideFragments = require('./generatePeptideFragments');\n\nexports.getInfo = function () {\n    return aa;\n}\n\n// sequence should be in the \"right\" format like HAlaGlyProOH\n\nexports.splitPeptide=splitPeptide;\nexports.digestPeptide=digestPeptide;\n\nexports.calculateIEP = function (sequence) {\n    var aas=splitPeptide(sequence);\n    var result=IEP.calculateIEP(aas);\n    return result;\n}\n\nexports.calculateIEPChart = function (sequence) {\n    var aas=splitPeptide(sequence);\n    var result=IEP.calculateChart(aas);\n    return result;\n}\n\n\nexports.getColorForIEP = function (iep) {\n    return IEP.getColor(iep);\n}\n\nexports.calculateCharge = function (sequence, ph) {\n    var aas=splitPeptide(sequence);\n    return IEP.calculateCharge(aas, ph);\n}\n\nexports.generatePeptideFragments = generatePeptideFragments;\n\nexports.chargePeptide = chargePeptide;\nexports.allowNeutralLoss = allowNeutralLoss;\n\nfunction aa1To3(code) {\n    for (var i = 0; i < aa.length; i++) {\n        if (aa[i].aa1 === code) {\n            return aa[i].aa3;\n        }\n    }\n    throw new Error('Invalid 1 letter code: ' + code);\n}\n\nfunction converAA1To3(mf) {\n    var newmf = '';\n    for (var i = 0; i < mf.length; i++) {\n        newmf += aa1To3(mf.charAt(i));\n    }\n    return newmf;\n}\n\nfunction capitalizeAA3(mf) {\n    for (var i = 0; i < aa.length; i++) {\n        var regexp = new RegExp(aa[i].aa3, 'gi');\n        mf = mf.replace(regexp, aa[i].aa3);\n    }\n    return mf;\n}\n\n\nexports.convertAASequence = function convertAASequence(mf) {\n    // this function will check if it is a sequence of aa in 1 letter or 3 letters and convert them if it is the case\n    // it could be a multiline mf !\n    // if it is a multiline we could make some \"tricks\" ...\n    var newmf = mf;\n    // SEQRES   1 B  256  MET PRO VAL GLU ILE THR VAL LYS GLU LEU LEU GLU ALA\n    // SEQRES   2 B  256  GLY VAL HIS PHE GLY HIS GLU ARG LYS ARG TRP ASN PRO\n    // or\n    // MET PRO VAL GLU ILE THR VAL LYS GLU LEU LEU GLU ALA\n    // GLY VAL HIS PHE GLY HIS GLU ARG LYS ARG TRP ASN PRO\n    if (mf.search(/[A-Z]{3} [A-Z]{3} [A-Z]{3}/) > -1) {\n        // this is a PDB !\n        var tmpmf = mf.replace(/[\\r\\n]+/g, ' ');\n        tmpmf = tmpmf.replace(/(SEQRES|[0-9]+| [A-Z] | [0-9A-Z]{4-50})/g, '');\n        // we need to correct the uppercase / lowercase\n        var parts = tmpmf.split(' ');\n        newmf = 'H';\n        for (var i = 0; i < parts.length; i++) {\n            newmf += parts[i].substr(0, 1) + parts[i].substr(1).toLowerCase();\n        }\n        newmf += 'OH';\n    } else if ((mf.search(/[A-Z]{3}/) > -1) && (mf.search(/[a-zA-Z][a-z0-9]/) == -1)) {\n        // UNIPROT\n        //   370        380        390        400        410        420\n        //GFKPNLRKTF VSGLFRESCG AHFYRGVDVK PFYIKKPVDN LFALMLILNR LRGWGVVGGM\n        //\n        //    430        440        450        460        470        480\n        //SDPRLYKVWV RLSSQVPSMF FGGTDLAADY YVVSPPTAVS VYTKTPYGRL LADTRTSGFR\n        // We remove all the number, all the spaces, etc\n        newmf = 'H' + converAA1To3(newmf.replace(/[^A-Z]/g, '')) + 'OH';\n    }\n\n    return newmf;\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/index.js\n ** module id = 0\n ** module chunks = 0\n **/","'use strict';\n\n// SOURCE: https://en.wikipedia.org/wiki/Amino_acid\nmodule.exports = [\n    // Standard amino acids\n    {\n        name: \"Alanine\",\n        aa3: \"Ala\",\n        aa1: \"A\",\n        sc: {\n            type: \"hydrophobic\"\n        },\n        pKaC: 2.33,\n        pKaN: 9.71\n    },\n    {\n        name: \"Arginine\",\n        aa3: \"Arg\",\n        aa1: \"R\",\n        sc: {\n            type: \"positive\",\n            pKa: 12.10\n        },\n        pKaC: 2.03,\n        pKaN: 9.00\n    },\n    {\n        name: \"Asparagine\",\n        aa3: \"Asn\",\n        aa1: \"N\",\n        sc: {\n            type: \"polar\"\n        },\n        pKaC: 2.13,\n        pKaN: 9.05\n    },\n    {\n        name: \"Aspartic acid\",\n        aa3: \"Asp\",\n        aa1: \"D\",\n        sc: {\n            type: \"negative\",\n            pKa: 3.71\n        },\n        pKaC: 1.95,\n        pKaN: 9.66\n    },\n    {\n        name: \"Cysteine\",\n        aa3: \"Cys\",\n        aa1: \"C\",\n        sc: {\n            type: \"special\",\n            pKa: 8.14\n        },\n        pKaC: 1.91,\n        pKaN: 10.28\n    },\n    {\n        name: \"Glutamic acid\",\n        aa3: \"Glu\",\n        aa1: \"E\",\n        sc: {\n            type: \"negative\",\n            pKa: 4.15\n        },\n        pKaC: 2.16,\n        pKaN: 9.58\n    },\n    {\n        name: \"Glutamine\",\n        aa3: \"Gln\",\n        aa1: \"Q\",\n        sc: {\n            type: \"polar\"\n        },\n        pKaC: 2.18,\n        pKaN: 9.00\n    },\n    {\n        name: \"Glycine\",\n        aa3: \"Gly\",\n        aa1: \"G\",\n        sc: {\n            type: \"special\"\n        },\n        pKaC: 2.34,\n        pKaN: 9.58\n    },\n    {\n        name: \"Histidine\",\n        aa3: \"His\",\n        aa1: \"H\",\n        sc: {\n            type: \"positive\",\n            pKa: 6.04\n        },\n        pKaC: 1.70,\n        pKaN: 9.09\n    },\n    {\n        name: \"Isoleucine\",\n        aa3: \"Ile\",\n        aa1: \"I\",\n        sc: {\n            type: \"hydrophobic\"\n        },\n        pKaC: 2.26,\n        pKaN: 9.60\n    },\n    {\n        name: \"Leucine\",\n        aa3: \"Leu\",\n        aa1: \"L\",\n        sc: {\n            type: \"hydrophobic\"\n        },\n        pKaC: 2.32,\n        pKaN: 9.58\n    },\n    {\n        name: \"Lysine\",\n        aa3: \"Lys\",\n        aa1: \"K\",\n        sc: {\n            type: \"positive\",\n            pKa: 10.67\n        },\n        pKaC: 2.15,\n        pKaN: 9.16\n    },\n    {\n        name: \"Methionine\",\n        aa3: \"Met\",\n        aa1: \"M\",\n        sc: {\n            type: \"hydrophobic\"\n        },\n        pKaC: 2.16,\n        pKaN: 9.08\n    },\n    {\n        name: \"Phenylalanine\",\n        aa3: \"Phe\",\n        aa1: \"F\",\n        sc: {\n            type: \"hydrophobic\"\n        },\n        pKaC: 2.18,\n        pKaN: 9.09\n    },\n    {\n        name: \"Proline\",\n        aa3: \"Pro\",\n        aa1: \"P\",\n        sc: {\n            type: \"special\"\n        },\n        pKaC: 1.95,\n        pKaN: 10.47\n    },\n    {\n        name: \"Serine\",\n        aa3: \"Ser\",\n        aa1: \"S\",\n        sc: {\n            type: \"polar\"\n        },\n        pKaC: 2.13,\n        pKaN: 9.05\n    },\n    {\n        name: \"Threonine\",\n        aa3: \"Thr\",\n        aa1: \"T\",\n        sc: {\n            type: \"polar\"\n        },\n        pKaC: 2.20,\n        pKaN: 8.96\n    },\n    {\n        name: \"Tryptophan\",\n        aa3: \"Trp\",\n        aa1: \"W\",\n        sc: {\n            type: \"hydrophobic\"\n        },\n        pKaC: 2.38,\n        pKaN: 9.34\n    },\n    {\n        name: \"Tyrosine\",\n        aa3: \"Tyr\",\n        aa1: \"Y\",\n        sc: {\n            type: \"hydrophobic\"\n        },\n        pKaC: 2.24,\n        pKaN: 9.04\n    },\n    {\n        name: \"Valine\",\n        aa3: \"Val\",\n        aa1: \"V\",\n        sc: {\n            type: \"hydrophobic\"\n        },\n        pKaC: 2.27,\n        pKaN: 9.52\n    },\n    // Additional\n    {\n        name: \"Selenocysteine\",\n        aa3: \"Sec\",\n        aa1: \"U\"\n    },\n    {\n        name: \"Pyrrolysine\",\n        aa3: \"Pyl\",\n        aa1: \"O\"\n    },\n    // Ambiguous\n    {\n        name: \"Asparagine or aspartic acid\",\n        aa3: \"Asx\",\n        aa1: \"B\"\n    },\n    {\n        name: \"Glutamine or glutamic acid\",\n        aa3: \"Glx\",\n        aa1: \"Z\"\n    },\n    {\n        name: \"Leucine or isoleucine\",\n        aa3: \"Xle\",\n        aa1: \"J\"\n    },\n    {\n        name: \"Unspecified or unknown\",\n        aa3: \"Xaa\",\n        aa1: \"X\"\n    }\n];\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/aminoAcids.js\n ** module id = 1\n ** module chunks = 0\n **/","'use strict';\n\n\nvar aa = require('./aminoAcids');\n\n// we will convert the data to an object to be much faster\nvar aaObject={};\nfor (var i=0; i<aa.length; i++) {\n    aaObject[aa[i].aa3]=aa[i];\n}\n\n\n\nfunction calculateCharge(aas, pH) {\n    if (! pH) pH=7.0;\n    var combined=combine(aas);\n    if (!combined) return;\n    var charge=calculateForPh(combined, pH);\n    return Math.round(charge*1000)/1000;\n}\n\n// this methods required an array of aas\n\nfunction calculateIEP(aas) {\n    var combined=combine(aas);\n    if (!combined) return;\n    var first=0;\n    var last=14;\n    var current=14;\n    var previous=0;\n    var currentCharge;\n    while (Math.abs(current-previous)>0.0001) {\n        previous=current;\n        current=(last + first) / 2;\n        currentCharge=calculateForPh(combined, current);\n        if (currentCharge>0) {\n            first=current;\n        } else if (currentCharge<0) {\n            last=current;\n        } else {\n            previous=current;\n        }\n    }\n    return Math.round(current*1000)/1000;\n}\n\nfunction calculateChart(aas) {\n    var combined=combine(aas);\n    if (!combined) return;\n    var y=[];\n    var yAbs=[];\n    for (var i=0; i<=14; i=i+0.01) {\n        var charge=calculateForPh(combined, i);\n        y.push(charge);\n        yAbs.push(Math.abs(charge));\n    }\n    combined.y=y;\n    combined.yAbs=yAbs;\n\n    return combined;\n}\n\n\nfunction calculateForPh(combined, pH) {\n    var total=0;\n    total+=1/(1+Math.pow(10,pH-combined.first));\n    total+=-1/(1+Math.pow(10,combined.last-pH));\n    for (var key in combined.acid) {\n        total+=-combined.acid[key]/(1+Math.pow(10,aaObject[key].sc.pKa-pH));\n    }\n    for (var key in combined.basic) {\n        total+=combined.basic[key]/(1+Math.pow(10,pH-aaObject[key].sc.pKa));\n    }\n    return total;\n}\n\n// we will combine the amino acids\nfunction combine(aas) {\n    var combined={};\n    if (aaObject[aas[0]]) {\n        combined.first=aaObject[aas[0]].pKaN;\n    } else {\n        return;\n    }\n    if (aaObject[aas[aas.length-1]]) {\n        combined.last=aaObject[aas[aas.length-1]].pKaC;\n    } else {\n        return;\n    }\n    combined.basic={};\n    combined.acid={};\n    for (var i=0; i<aas.length; i++) {\n        var aa=aas[i];\n        if (! aaObject[aa]) return;\n        if (aaObject[aa].sc && aaObject[aa].sc.type) {\n            if (aaObject[aa].sc.type==\"positive\") {\n                if (!combined.basic[aa]) {\n                    combined.basic[aa] = 0;\n                }\n                combined.basic[aa]++;\n            } else if (aaObject[aa].sc.type==\"negative\") {\n                if (!combined.acid[aa]) {\n                    combined.acid[aa] = 0;\n                }\n                combined.acid[aa]++;\n            }\n        }\n    }\n    return combined;\n}\n\n/*\n We can generate a color based on iep\n 0 -> 7 means that at pH 7 it is charged negatively (blue)\n 7 -> 14 means that at pH7 it is charged positively (red)\n */\nfunction getColor(iep) {\n    if (iep<7) {\n        if (iep<3) iep=3;\n        var white=Math.round(255-(7-iep)*(200/4));\n        return \"rgb(\"+white+\",\"+white+\",255)\";\n    } else if (iep>7) {\n        if (iep>11) iep=11;\n        var white=Math.round(255-(iep-7)*(200/4));\n        return \"rgb(255,\"+white+\",\"+white+\")\";\n    }\n    return \"rgb(255,255,255)\";\n}\n\nmodule.exports={\n    calculateIEP: calculateIEP,\n    calculateCharge: calculateCharge,\n    calculateChart: calculateChart,\n    getColor: getColor\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/isoElectricPoint.js\n ** module id = 2\n ** module chunks = 0\n **/","'use strict';\n\nvar getAA = require('./getAA');\n\n// SOURCE: https://en.wikipedia.org/wiki/Amino_acid\n\nfunction chargePeptide(mf, options) {\n    var options=options || {};\n    if (options.pH === undefined) options.pH=0;\n    if (Array.isArray(mf)) {\n        for (var i=0; i<mf.length; i++) {\n            mf[i]=chargeOnePeptide(mf[i], options);\n        }\n        return mf;\n    } else {\n        return chargeOnePeptide(mf, options);\n    }\n}\n\nfunction chargeOnePeptide(mf, options) {\n    var pH=options.pH;\n    // we will allow to charge the peptide at a specific pH\n\n    // first amino acids (N-terminal)\n    if (mf.match(/^H[A-Z][a-z]{2}/)) {\n        var firstAA=mf.replace(/^H([A-Z][a-z]{2}).*/,\"$1\");\n        if (getAA(firstAA) && pH<getAA(firstAA).pKaN) {\n            mf=mf.replace(/^H([^+])/, 'H+H$1');\n        }\n    }\n\n    // last amino acids (C-terminal)\n    if (mf.match(/[A-Z][a-z]{2}OH$/)) {\n        var lastAA=mf.replace(/.*([A-Z][a-z]{2})OH$/,\"$1\");\n        if (getAA(firstAA) && pH>getAA(firstAA).pKaC) {\n            mf=mf.replace(/OH$/, 'O-');\n        }\n    }\n\n    // basic AA\n    if (pH < getAA('Arg').sc.pKa) mf=mf.replace(/(Arg)(?!\\()/g, '$1(H+)');\n    if (pH < getAA('His').sc.pKa) mf=mf.replace(/(His)(?!\\()/g, '$1(H+)');\n    if (pH < getAA('Lys').sc.pKa) mf=mf.replace(/(Lys)(?!\\()/g, '$1(H+)');\n\n    // acid AA\n    if (pH > getAA('Asp').sc.pKa) mf=mf.replace(/(Asp)(?!\\()/g, '$1(H-1-)');\n    if (pH > getAA('Glu').sc.pKa) mf=mf.replace(/(Glu)(?!\\()/g, '$1(H-1-)');\n\n    if (pH > getAA('Cys').sc.pKa) mf=mf.replace(/(Cys)(?!\\()/g, '$1(H-1-)');\n\n    return mf;\n};\n\nmodule.exports = chargePeptide;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/chargePeptide.js\n ** module id = 3\n ** module chunks = 0\n **/","'use strict';\n\nvar aa = require('./aminoAcids');\n\nfunction getAA(code) {\n    if (code.length===1) {\n        for (var i = 0; i < aa.length; i++) {\n            if (aa[i].aa1 === code) {\n                return aa[i];\n            }\n        }\n    }\n    if (code.length===3) {\n        for (var i = 0; i < aa.length; i++) {\n            if (aa[i].aa3 === code) {\n                return aa[i];\n            }\n        }\n    }\n}\n\nmodule.exports = getAA;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/getAA.js\n ** module id = 4\n ** module chunks = 0\n **/","\nfunction allowNeutralLoss(mf, options) {\n    if (Array.isArray(mf)) {\n        for (var i=0; i<mf.length; i++) {\n            mf[i]=allowOneNeutralLoss(mf[i], options);\n        }\n        return mf;\n    } else {\n        return allowOneNeutralLoss(mf, options);\n    }\n}\n\nfunction allowOneNeutralLoss(mf, options) {\n    mf=mf.replace(/(Ser|Thr|Asp|Glu)(?!\\()/g, '$1(H-2O-1)0-1');\n    mf=mf.replace(/(Arg|Lys|Asn|Gln)(?!\\()/g, '$1(N-1H-3)0-1');\n\n    return mf;\n};\n\nmodule.exports = allowNeutralLoss;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/allowNeutralLoss.js\n ** module id = 5\n ** module chunks = 0\n **/","'use strict';\n\nfunction splitSequence(sequence) {\n    var aas=sequence.replace(/([A-Z])/g,\" $1\").split(/ /);\n    var begin=0;\n    while (aas[begin]==='' || aas[begin]==='H') {\n        begin++;\n    }\n    var end=aas.length-1;\n    while (aas[end]==='O' || aas[end]==='H') {\n        end--;\n    }\n    aas=aas.slice(begin,end+1);\n    return aas;\n}\n\n\nmodule.exports = splitSequence;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/splitPeptide.js\n ** module id = 6\n ** module chunks = 0\n **/","'use strict';\n\nvar splitSequence=require('./splitPeptide');\n\n\n/*\nIotuibs:\n* minMissed (default: 0)\n* maxMissed (default: 0)\n* minResidue: 0;\n* maxResidue: infinity\n* enzyme: chymotrypsin, trypsin, glucph4, glucph8, thermolysin, cyanogenbromide : Mandatory, no default value !\n */\n\nfunction digestSequence(sequence, options) {\n    var options=options || {};\n\n    sequence=sequence.replace(/^H([^a-z])/,'$1').replace(/OH$/,'');\n\n    options.enzyme = options.enzyme || 'trypsin';\n    if (options.minMissed===undefined) options.minMissed=0;\n    if (options.maxMissed===undefined) options.maxMissed=0;\n    if (options.minResidue===undefined) options.minResidue=0;\n    if (options.maxResidue===undefined) options.maxResidue=Number.MAX_VALUE;\n    var regexp=getRegexp(options.enzyme);\n    var fragments=sequence.replace(regexp,\"$1 \").split(/ /);\n    if (!fragments[fragments.length-1]) fragments=fragments.slice(0, fragments.length-1);\n\n    var from=0;\n    for (var i=0; i<fragments.length; i++) {\n        var nbResidue=splitSequence(fragments[i]).length;\n        fragments[i]={\n            sequence:fragments[i],\n            nbResidue:nbResidue,\n            from:from+1,\n            to:from+nbResidue\n        }\n        from+=nbResidue;\n    }\n\n\n    var results=[];\n\n    for (var i=0; i<fragments.length-options.minMissed; i++) {\n        for (var j=options.minMissed; j<=Math.min(options.maxMissed,fragments.length-i-1); j++) {\n            var fragment='';\n            var nbResidue=0;\n            for (var k=i; k<=(i+j); k++) {\n                fragment+=fragments[k].sequence;\n                nbResidue+=fragments[k].nbResidue;\n            }\n            var from=fragments[i].from;\n            var to=fragments[i+j].to;\n            if (fragment && nbResidue>=options.minResidue && nbResidue<=options.maxResidue) {\n                results.push(\"H\"+fragment+\"OH\"+\"$D\"+from+\">\"+to);\n            }\n        }\n    }\n\n    return results;\n}\n\n\nfunction getRegexp(enzyme) {\n    switch (enzyme.toLowerCase().replace(/[^a-z0-9]/g,'')) {\n        case 'chymotrypsin':\n            return /(Phe|Tyr|Trp)(?!Pro)/g;\n        case 'trypsin':\n            return /(Lys|Arg)(?!Pro)/g;\n        case 'lysc':\n            return /(Lys)(?!Pro)/g;\n        case 'glucph4':\n            return /(Glu)(?!Pro|Glu)/g;\n        case 'glucph8':\n            return /(Asp|Glu)(?!Pro|Glu)/g;\n        case 'thermolysin':\n            return /(Leu|Ile|Met|Phe|Trp)/g;\n        case 'cyanogenbromide':\n            return /(Met)/g;\n    }\n    throw new Error('Digestion enzyme: '+enzyme+' is unknown');\n}\n\nmodule.exports = digestSequence;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/digestPeptide.js\n ** module id = 7\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function(mf, options) {\n    if (options === undefined) {\n        options = {\n            a: false,\n            b: true,\n            c: false,\n            x: false,\n            y: true,\n            z: false,\n            i: false,\n            ya: false,\n            yb: false,\n            yc: false,\n            zc: false\n        };\n    }\n    options.maxInternal = options.maxInternal || Number.MAX_VALUE;\n    options.minInternal = options.minInternal || 0;\n\n    var mfs = [];\n    // need to allow 0-9 to deal with neutral loss\n    var mfparts=mf.replace(/([a-z\\)0-9])([A-Z][a-z](?=[a-z]))/g,\"$1 $2\").split(/ /);\n\n    var nTerm=\"\";\n    var cTerm=\"\";\n\n    for (var i=1; i<mfparts.length; i++) {\n        nTerm+=mfparts[i-1];\n        cTerm=mfparts[mfparts.length-i]+cTerm;\n        addNTerm(mfs, nTerm, i, options);\n        addCTerm(mfs, cTerm, i, options);\n        if (options.i) mfs.push(mfparts[i]+\"HC-1O-1(+1)$i:\"+mfparts[i]);\n\n        if (options.ya || options.yb || options.yc || options.zc) { // we have double fragmentations\n            for (var j=i+1; j<Math.min(mfparts.length,options.maxInternal+i+1);j++) {\n                var iTerm='';\n                if ((j-i)>=options.minInternal) {\n                    for (var k = i; k < j; k++) {\n                        iTerm += mfparts[k];\n                    }\n                    addITerm(mfs, iTerm, mfparts.length - i, j, options);\n                }\n            }\n        }\n    }\n\n    if (mfs.length === 0) {\n        mfs = mfs.concat([mf]);\n    }\n\n    return mfs;\n\n};\n\nfunction addNTerm(mfs, nTerm, i, options) {\n    if (options.a) mfs.push(nTerm+\"C-1O-1(+1)$a\"+i);\n    if (options.b) mfs.push(nTerm+\"(+1)$b\"+i);\n    if (options.c) mfs.push(nTerm+\"NH3(+1)$c\"+i);\n}\n\nfunction addITerm(mfs, iTerm, i, j, options) {\n    if (options.ya) mfs.push(\"H\"+iTerm+\"C-1O-1(+1)$a\"+j+\"y\"+i);\n    if (options.yb) mfs.push(\"H\"+iTerm+\"(+1)$b\"+j+\"y\"+i);\n    if (options.yc) mfs.push(\"H\"+iTerm+\"NH3(+1)$c\"+j+\"y\"+i);\n    if (options.zc) mfs.push(\"N-1\"+iTerm+\"NH3(+1)$c\"+j+\"z\"+i);\n}\n\nfunction addCTerm(mfs, cTerm, i, options) {\n    if (options.x) mfs.push(\"CO(+1)\"+cTerm+\"$x\"+i);\n    if (options.y) mfs.push(\"H2(+1)\"+cTerm+\"$y\"+i);\n    if (options.z) mfs.push(\"N-1H-1(+1)\"+cTerm+\"$z\"+i);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/generatePeptideFragments.js\n ** module id = 8\n ** module chunks = 0\n **/"],"sourceRoot":""}